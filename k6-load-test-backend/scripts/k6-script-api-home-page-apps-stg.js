// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import "./libs/shim/expect.js";

export const options = {
  maxRedirects: 4,
  duration: "1m",
  vus: 50,
  ext: {
    loadimpact: {
      name: "[STRESS-TEST] Sirka Top Hit Endpoint",
      projectID: 3574111,
      staticIPs: false,
      distribution: {
        distributionLabel1: { loadZone: "amazon:sg:singapore", percent: 100 },
      },
      note: "Module User | Module Food | Module Progress",
    },
  },
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    base_url: "localhost:5001",
    staff_token: "token dcbce66093301d4d6f53baf31a007d10dd8e6e56",
    client_token: "token 71s029vsj9j1mdjxkke7e1acrrnpvywv3rhhuhok",
    superuser_token: "token dcbce66093301d4d6f53baf31a007d10dd8e6e56",
    coach_token: "token 902d6f32e070c77f83bd567afa0f542983eada06",
    token_type: "Bearer",
    token_value:
      "eyJhbGciOiJSUzI1NiIsImtpZCI6IjYwNzdBNzkyMERFNDM1NDQ5QkUxNEEwNTI5QkZFNjQxNUEzOTZFRjgiLCJ0eXAiOiJhdCtqd3QiLCJ4NXQiOiJZSGVua2cza05VU2I0VW9GS2JfbVFWbzVidmcifQ.eyJuYmYiOjE2NDMyNTg1MDgsImV4cCI6MTY0MzM0NDkwOCwiaXNzIjoiaHR0cHM6Ly9vYXV0aC5mYXRzZWNyZXQuY29tIiwiYXVkIjoiYmFzaWMiLCJjbGllbnRfaWQiOiIyNzcwMTcyODVmZmU0MTc2ODFhZDdhOWE5NzBmNDdmMSIsInNjb3BlIjpbImJhc2ljIl19.auns1tGSKco5rjOcq4_PddlCfONJh7ImWHSl9Ew0yqrUUqX7yYGwBxW6riVSg69MWZ3v0ZGjkr7mO9qQBlh2hHmKepJhTJuxqiTezlAOCnqC6PfDBYowmydWAkm3bM0lF6I3kN_nT2x01oC6U3aag9tGyzCJj9Wn1yDOkNcsgXAStpNAgnHFLOwRIbL0B2wrZ754uWrLX4M0A2n0sUCh6LDhsiVn-_JFWeCtMBjEuIbrjDTjcwo6U-ydyjgVK1IruM6vIEGFWvdIV9O1QqxHoQedcEzsrK284fbo6WWqXpf45-4IOpuD6885B1O4kZioDW_gh6JY1AWDcL6UhPF_2iP0khQk6jDU5CbSB-HptB8qYoEIAX6Zp89uMuUX_XLnILTx0BvRLeK7_umm7WgoxL3y8CHEJdMoQ2km_PbgZhRW42C1IuvSqcXyhEmpOaxlpBOp1yoZbYIfOOevYEnVfRllY8Q5vP9Fx34oxGfUEeIGClvq-xxQYvyF48ZWgV-n1htw9RY1F6Q0h6H4xuXZIQAlTvEKs3PvFsn8BlgRrizjcd4T2rDUNBvRnRKplUYIfknB2ArS4Odwi3RymGz-KXCBIbX2NUAYBoFi8YFc_owk-svxerCWWtw5gBDsnIgZGYl9hBgDvaWkvTR0XfCdx3-GiDUf_g98vnlPsU9Usrw",
    "random-response::task-simplified.id": 1,
    "random-response::task-simplified":
      '{"id":2610,"date":"2022-02-10","answer":false,"description":"Tugas malam jum\'at","end_date":"March 10, 2022","category":null,"link":null}',
    "random-response::client-booking":
      '{"id":47,"start_time":"11:00:00","end_time":"11:30:00","coach_id":508,"coach_name":"Coach Sirkawan","date":"2022-07-13","is_first_call":false,"client_id":962,"client_name":"Muhammad Luthfi","status":"PENDING","coach_remark":null,"description":"Next call"}',
    "random-request::client-booking.date": "2022-04-14",
    "random-request::client-booking.start_time": "10:00",
    "random-request::client-booking.end_time": "10:30",
    "random-request::whitelist-by_email": "",
    "request-path:user_id": "",
    "response-body:get-user": "",
    token_user_stg: "token f0buksemdkap9e9j8mj9pvjxtvelmrstsnxerx5d",
    base_url_stg: "https://stg-api.sirka.io",
    base_url_prod: "https://api.sirka.io",
    admin_token_prod: "token 8736b799487aba237c72adbab8c01a194eb7cd65",
    base_url_prev: "https://prev-api.sirka.io",
    "client_token.mario": "token 234e190c1e48e224082ebc422cc88900c6cf19a1",
    base_url_scraping_meal_log_prod: "https://sirka-external-meallog.sirka.io",
    base_url_scraping_meal_log_stg:
      "https://sirka-staging-sirka-external-meallog.sirka.io",
    user_id: 1420,
    food_id: "",
    client_token_manual: "token hskpat4fqsdgpjyxxtpmdeb2s7shmxu5kdd8pujg",
    client_token_manual_stg: "token f0buksemdkap9e9j8mj9pvjxtvelmrstsnxerx5d",
    id_user_stg: "2235",
    skr: "2023-04-18"
  }
});

export default function() {
  postman[Request]({
    name: "assessment status",
    id: "dbd83347-56eb-424a-b34b-85f5ba8477e7",
    method: "GET",
    address: "{{base_url_stg}}/assessment/check",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "voucher general",
    id: "3401fbbe-32c1-4d9f-85df-8bfcb89dc184",
    method: "GET",
    address:
      "{{base_url_stg}}/vouchers/general?platform=apps&page=1&page_size=1",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code is 200", function() {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "subscription status",
    id: "13853fb0-caef-47dc-8271-b29db5f2a4f0",
    method: "GET",
    address: "{{base_url_stg}}/user/{{id_user_stg}}/subscription-status",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Response should have", function() {
        const resp = pm.response.json();
        pm.expect(resp).to.have.property("subscription_count");
        //pm.expect(resp.subscription_count).exist;
      });
    }
  });

  postman[Request]({
    name: "client coach",
    id: "0531f9f1-8b63-4bd5-ade6-2904bb38c9d6",
    method: "GET",
    address: "{{base_url_stg}}/user/client/coach",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });

      pm.test("Response should have field like below", () => {
        pm.expect(pm.response.json()).to.have.property("coach_id");
        pm.expect(pm.response.json()).to.have.property("coach_name");
        pm.expect(pm.response.json()).to.have.property("coach_gender");
        pm.expect(pm.response.json()).to.have.property("coach_avatar");
      });
    }
  });

  postman[Request]({
    name: "sirkapedia module",
    id: "cc057d63-08e0-4b47-831d-5a7ea0fd8322",
    method: "GET",
    address:
      "{{base_url_stg}}/sirkapedia/module?client_id=2235&get_by=clientId",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "user progress",
    id: "5b5c08a6-54b2-4b54-96b1-7f8480b78e48",
    method: "GET",
    address: "{{base_url_stg}}/user/progress",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "client not read",
    id: "1bd0cba1-9888-412a-8e7e-0e83800b72ba",
    method: "GET",
    address: "{{base_url_stg}}/sirkapedia/client/not-read",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });

      pm.test(
        "Response should have field like module_id, sub_module_id,month",
        () => {
          const resp = pm.response.json();
          pm.expect(resp).to.have.property("module_id");
          pm.expect(resp).to.have.property("sub_module_id");
          pm.expect(resp).to.have.property("month");
        }
      );
    }
  });

  postman[Request]({
    name: "food recall message",
    id: "8612175f-8540-40b2-b513-285389a01b44",
    method: "GET",
    address: "{{base_url_stg}}/meallogs/client/food-recall/message",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "weight entries",
    id: "c25cadd4-91ec-4343-b33e-e237f66b0d5d",
    method: "GET",
    address: "{{base_url_stg}}/progress/journal/weight_entries?date={{skr}}",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "is active biometric",
    id: "07c48894-e589-42ad-91d5-bab78ef76367",
    method: "GET",
    address: "{{base_url_stg}}/biometric",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });

      pm.test("response should have field is_active", () => {
        pm.expect(pm.response.json()).to.have.property("is_active");
      });
    }
  });

  postman[Request]({
    name: "home banner",
    id: "3a656841-e024-4ca8-abc8-6db399fe1280",
    method: "GET",
    address: "{{base_url_stg}}/banner/home/",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "booking next call",
    id: "73f279e0-d93c-42fa-99ca-34f119ff7390",
    method: "GET",
    address: "{{base_url_stg}}/user/client/booking/next-call",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "food journal",
    id: "bd4b16b0-48c4-42d7-a301-9f4cfc9e585c",
    method: "GET",
    address:
      "{{base_url_stg}}/food_journal/food_repository?meal_time&page=1&page_size=4",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "profile",
    id: "df8b5b1c-7a0d-4662-b5db-31176d15afaa",
    method: "GET",
    address: "{{base_url_stg}}/user/status/profile/2235",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "referrals code",
    id: "85f897a3-d27e-4a01-9b90-33d6c5902a12",
    method: "GET",
    address: "{{base_url_stg}}/vouchers/referrals/code",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "user progress",
    id: "de38ef13-b398-4202-909d-58f7ee0c691c",
    method: "GET",
    address: "{{base_url_stg}}/onboarding/user-progress",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code should be 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "intake budget calorie",
    id: "27d2a41e-ea7b-40bf-900b-23b13db67e65",
    method: "GET",
    address: "{{base_url_stg}}/budget-calorie/intake?date={{skr}}",
    headers: {
      Authorization: "{{token_user_stg}}"
    },
    post(response) {
      pm.test("status code is 200", () => {
        pm.response.to.have.status(200);
      });
    }
  });
}
